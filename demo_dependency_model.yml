---
# Demo playbook for dependency model: app1 -> os1
# This demonstrates the dependency validation in action

- name: "Demo: Component Dependency Model"
  hosts: localhost
  gather_facts: true

  tasks:
    - name: "Demo 1: Show current states"
      debug:
        msg:
          - "Current component states:"
          - "  os1: {{ ansible_facts.component_state | default('unknown') }}"
          - "  app1: {{ ansible_facts.component_state | default('unknown') }}"

    - name: "Demo 2: Try to start app1 (will check dependency on os1)"
      include_role:
        name: state_change
      vars:
        component_name: "app1"
        target_state: "RUNNING"
      register: app1_start_result
      ignore_errors: true

    - name: "Demo 3: Show result of app1 start attempt"
      debug:
        msg:
          - "app1 start result: {{ 'SUCCESS' if app1_start_result is not failed else 'FAILED' }}"
          - "Reason: {{ app1_start_result.msg | default('No message') if app1_start_result is failed else 'Dependency validation passed' }}"

    - name: "Demo 4: Start os1 first"
      include_role:
        name: state_change
      vars:
        component_name: "os1"
        target_state: "RUNNING"

    - name: "Demo 5: Now try to start app1 again (should succeed)"
      include_role:
        name: state_change
      vars:
        component_name: "app1"
        target_state: "RUNNING"

    - name: "Demo 6: Show final states"
      debug:
        msg:
          - "Final component states:"
          - "  os1: {{ ansible_facts.component_state | default('unknown') }}"
          - "  app1: {{ ansible_facts.component_state | default('unknown') }}"

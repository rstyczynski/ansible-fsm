---
# Main tasks for L2_state_context role
# This role reads the current state using map-based approach for efficiency
# All variables are prefixed with L2_ to avoid namespace conflicts

# Component variable is set by the calling playbook

- name: "L2 State Context - Load component state machine"
  set_fact:
    L2_component_state_machine: "{{ state_machines[asset_definitions[L2_component].state_machine_spec] }}"
  when: 
    - L2_component is defined
    - asset_definitions[L2_component] is defined
    - state_machines is defined
  tags:
    - L2_state_context
    - L2_state_reading
    - L2_state_machine_loading

- name: "L2 State Context - Load state map for efficient access"
  include_tasks: load_state_map.yml
  tags:
    - L2_state_context
    - L2_state_reading
    - L2_map_loading

- name: "L2 State Context - Initialize state reading"
  set_fact:
    L2_current_state: "{{ L2_initial_state }}"
    L2_state_reading_method: "initial"
    L2_state_reading_timestamp: "{{ ansible_date_time.iso8601 }}"
  tags:
    - L2_state_context
    - L2_state_reading

- name: "L2 State Context - Use map-based state access"
  include_tasks: map_state_operations.yml
  when: 
    - L2_global_component_states is defined
    - L2_component is defined
  tags:
    - L2_state_context
    - L2_state_reading
    - L2_map_based

- name: "L2 State Context - Fallback to individual file reading"
  include_tasks: individual_file_reading.yml
  when: 
    - L2_global_component_states is not defined or L2_global_component_states[L2_component] is not defined
    - L2_component is defined
  tags:
    - L2_state_context
    - L2_state_reading
    - L2_fallback

- name: "L2 State Context - Validate read state"
  assert:
    that:
      - L2_current_state in L2_component_state_machine.states
    fail_msg: "State '{{ L2_current_state }}' is not valid for component '{{ L2_component }}'. Valid states: {{ L2_component_state_machine.states | join(', ') }}"
    success_msg: "State '{{ L2_current_state }}' is valid for component '{{ L2_component }}'"
  tags:
    - L2_state_context
    - L2_state_reading

- name: "L2 State Context - Set final state facts"
  set_fact:
    # L2_component_state: "{{ L2_current_state }}"
    # L2_component_state_timestamp: "{{ L2_state_reading_timestamp }}"
    # L2_component_state_method: "{{ L2_state_reading_method }}"
    # L2_component_state_valid: true
    # Store component state in a map with component name as key
    L2_component_states: "{{ L2_component_states | default({}) | combine({L2_component: {
      'state': L2_current_state,
      'timestamp': L2_state_reading_timestamp,
      'method': L2_state_reading_method,
      'valid': true
    }}) }}"
  tags:
    - L2_state_context
    - L2_state_reading

- name: "L2 State Context - Display current state information"
  debug:
    msg:
      - "Component: {{ L2_component }}"
      - "Current State: {{ L2_current_state }}"
      - "Reading Method: {{ L2_state_reading_method }}"
      - "Reading Timestamp: {{ L2_state_reading_timestamp }}"
      - "State Valid: True"
  when: L2_state_display_verbose | default(true)
  tags:
    - L2_state_context
    - L2_state_info
---
# Main tasks for L2_state_change role
# This role implements state-driven transitions for components using the state machine framework
# with L2 namespace isolation to prevent variable conflicts

- name: "L2 State Change: Variables"
  ansible.builtin.debug:
    msg: "L2_component_name: {{ L2_component_name }}"
  tags:
    - always
    - variable_isolation

- name: "L2 State Change: Initialize computed variables with isolation"
  ansible.builtin.set_fact:
    L2_component: "{{ L2_component_name }}"
    L2_asset_type: "{{ asset_definitions[L2_component_name].asset_type | default('app') }}"
    L2_component_services: "{{ asset_definitions[L2_component_name].services | default([]) }}"
    L2_component_processes: "{{ asset_definitions[L2_component_name].processes | default([]) }}"
    L2_component_ports: "{{ asset_definitions[L2_component_name].ports | default([]) }}"
    L2_component_dependencies: "{{ asset_definitions[L2_component_name].dependencies | default([]) }}"
    L2_component_maintenance_window: "{{ asset_definitions[L2_component_name].maintenance_window | default({}) }}"
    L2_component_state_machine_spec: "{{ asset_definitions[L2_component_name].state_machine_spec | default('app_lifecycle') }}"
    L2_actual_L2_target_state: "{{ L2_target_state }}"
  tags:
    - always
    - variable_isolation

- name: "L2 State Change: Initialize state machine variables with isolation"
  ansible.builtin.set_fact:
    L2_state_machine_config: "{{ state_machine | combine({'fact_file_path': './state/state_' + L2_component + '.fact'}) }}"
    L2_component_state_machine: "{{ state_machines[L2_component_state_machine_spec] }}"
    L2_asset_type_info: "{{ asset_types[L2_asset_type] | default({}) }}"
    L2_transition_role_name: "{{ asset_types[L2_asset_type].role_name | default('transition_' + L2_asset_type) }}"
    L2_transition_role_collection: "{{ asset_types[L2_asset_type].role_collection | default('') }}"
    L2_transition_role_timeout: "{{ asset_types[L2_asset_type].default_timeout | default(300) }}"
  tags:
    - always
    - variable_isolation

- name: "L2 State Change: Build full role name with isolation"
  ansible.builtin.set_fact:
    L2_transition_role_full_name: "{{ (L2_transition_role_collection + '.' + L2_transition_role_name) if L2_transition_role_collection != '' else L2_transition_role_name }}"
  tags:
    - always
    - variable_isolation

- name: "L2 State Change: Pre-Task - Validate component type configuration"
  assert:
    that:
      - L2_asset_type in asset_types
    fail_msg: "Asset type '{{ L2_asset_type }}' is not defined in asset_types configuration. Available types: {{ asset_types.keys() | list | join(', ') }}"
    success_msg: "Asset type '{{ L2_asset_type }}' is valid"
  when: asset_type_config.validate_role_existence | default(true)

- name: "L2 State Change: Pre-Task - Validate role existence"
  assert:
    that:
      - L2_transition_role_name is defined
      - L2_transition_role_name != ""
    fail_msg: "Failed to resolve role name for asset type '{{ L2_asset_type }}'"
    success_msg: "Resolved role '{{ L2_transition_role_name }}' for asset type '{{ L2_asset_type }}'"

- name: "L2 State Change: Pre-Task - Validate required variables"
  ansible.builtin.assert:
    that:
      - L2_component_name is defined and L2_component_name != ""
      - L2_component_name in asset_definitions
    fail_msg: "Invalid component '{{ L2_component_name }}'. Available components: {{ asset_definitions.keys() | list | join(', ') }}"
    success_msg: "Component '{{ L2_component_name }}' is valid"

- name: "L2 State Change: Pre-Task - Validate state if provided"
  ansible.builtin.assert:
    that:
      - L2_target_state == "" or L2_target_state in L2_component_state_machine.states
    fail_msg: >-
      Invalid state '{{ L2_target_state }}' for component '{{ L2_component_name }}'.
      Valid states: {{ L2_component_state_machine.states | join(', ') }}
    success_msg: "State '{{ L2_target_state }}' is valid for component '{{ L2_component_name }}'"
  when: L2_target_state != ""

- name: "L2 State Change: Pre-Task - Display execution parameters"
  ansible.builtin.debug:
    msg:
      - "Component: {{ L2_component_name }}"
      - "Target Hosts: {{ target_hosts | default('all') }}"
      - "Target State: {{ L2_target_state | default('none') }}"
      - "Skip Guard: {{ L2_skip_guard }}"
      - "Skip Persist: {{ L2_skip_persist }}"
      - "Dry Run: {{ L2_dry_run }}"

# State Context - Read current state
- name: "L2 State Change: State Context - Read current state"
  ansible.builtin.include_role:
    name: state_context
  vars:
    component: "{{ L2_component_name }}"
    asset_type: "{{ L2_asset_type }}"
  tags:
    - state_context
    - state_reading
    - "state_reading_{{ L2_component_name }}"

# State Change: Set component state in global map (moved to end of role)

# State Transient - Handle automatic transient state mapping
- name: "L2 State Change: Set variables for state_transient with isolation"
  ansible.builtin.set_fact:
    component: "{{ L2_component_name }}"
    L2_target_state: "{{ L2_target_state }}"
    L2_current_state: "{{ component_state }}"
    L2_actual_L2_target_state: "{{ L2_target_state }}"
    L2_original_L2_target_state: "{{ L2_target_state }}"
  tags:
    - always
    - variable_isolation

- name: "L2 State Change: State Transient - Handle transient state mapping"
  ansible.builtin.include_role:
    name: state_transient
  vars:
    component: "{{ L2_component_name }}"
    L2_target_state: "{{ L2_actual_L2_target_state }}"
    current_state: "{{ L2_current_state }}"
  tags:
    - state_transient
    - transient_handling

- name: "L2 State Change: Capture transient state results"
  ansible.builtin.set_fact:
    L2_actual_L2_target_state: "{{ actual_L2_target_state | default(L2_actual_L2_target_state) }}"
    L2_transient_state: "{{ transient_state | default('') }}"
    L2_transient_success_state: "{{ transient_success_state | default('') }}"
    L2_transient_failure_state: "{{ transient_failure_state | default('') }}"
    L2_transient_timeout: "{{ transient_timeout | default(300) }}"
    L2_skip_transient_mapping: "{{ skip_transient_mapping | default(false) }}"
  tags:
    - state_transient
    - transient_handling

# State Guard - Validate transition (if transition is specified)
- name: "L2 State Change: State Guard - Skip guard validation"
  ansible.builtin.debug:
    msg: "State guard validation skipped for {{ L2_component_name }} (skip_guard=true)"
  when: 
    - L2_target_state is defined
    - L2_target_state != ""
    - L2_current_state is defined
    - L2_skip_guard | default(false)

# PRE State Guard - Basic transition validation before asset transition
- name: "L2 State Change: PRE State Guard - Skip PRE guard validation for configured asset types"
  ansible.builtin.debug:
    msg: "PRE State guard validation skipped for {{ L2_component_name }} (asset_type={{ L2_asset_type }}, disable_pre_state_guard=true)"
  when: 
    - L2_target_state is defined
    - L2_target_state != ""
    - L2_current_state is defined
    - L2_asset_type_info.disable_pre_state_guard | default(false)
  tags:
    - pre_state_guard
    - transition_validation

- name: "L2 State Change: PRE State Guard - Validate basic transition"
  ansible.builtin.include_tasks: "{{ playbook_dir }}/roles/L2_state_guard/tasks/pre_guard.yml"
  vars:
    component: "{{ L2_component_name }}"
    asset_type: "{{ L2_asset_type }}"
    current_state: "{{ L2_current_state }}"
    L2_target_state: "{{ L2_actual_L2_target_state }}"
    component_dependencies: "{{ asset_definitions[L2_component_name].dependencies | default([]) }}"
  when: 
    - L2_target_state is defined
    - L2_target_state != ""
    - L2_current_state is defined
    - not (L2_skip_guard | default(false))
    - not (L2_asset_type_info.disable_pre_state_guard | default(false))
  tags:
    - pre_state_guard
    - transition_validation

# State Persist - Set transient state BEFORE operations (SCOPED)
- name: "L2 State Change: State Persist - Set transient state before operations"
  ansible.builtin.include_role:
    name: L2_state_persist
  vars:
    L2_component: "{{ L2_component_name }}"
    L2_asset_type: "{{ L2_asset_type }}"
    L2_new_state: "{{ L2_transient_state }}"
    L2_state_machine: "{{ L2_component_state_machine }}"
    L2_state_machine_config: "{{ L2_state_machine_config }}"
  when: 
    - L2_target_state is defined
    - L2_target_state != ""
    - L2_transient_state != ""
    - not L2_skip_transient_mapping
  tags:
    - state_persist
    - transient_state_set

# Dynamic transition execution based on component type
- name: "L2 State Change: Execute transition actions for component"
  ansible.builtin.include_role:
    name: "{{ L2_transition_role_full_name }}"
  vars:
    L2_target_state: "{{ L2_actual_L2_target_state }}"
    current_state: "{{ L2_current_state }}"
    component_instance: "{{ L2_component_name }}"
    asset_type_info: "{{ L2_asset_type_info }}"
    role_timeout: "{{ L2_transition_role_timeout }}"
    component_dependencies: "{{ asset_definitions[L2_component_name].dependencies | default([]) }}"
    transient_state: "{{ L2_transient_state }}"
    transient_success_state: "{{ L2_transient_success_state }}"
    transient_failure_state: "{{ L2_transient_failure_state }}"
    transient_timeout: "{{ L2_transient_timeout }}"
  when: 
    - L2_current_state is defined
    - L2_target_state is defined
    - L2_target_state != ""
    - not L2_dry_run
    - not L2_skip_transient_mapping
  tags:
    - transition_execution
    - "execute_actions_{{ L2_component_name }}"

- name: "L2 State Change: Skip transition - already in target state"
  ansible.builtin.debug:
    msg: "Skipping transition for {{ L2_component_name }} - already in target state {{ L2_target_state }}"
  when: 
    - L2_current_state is defined
    - L2_target_state is defined
    - L2_target_state != ""
    - L2_skip_transient_mapping
  tags:
    - transition_execution
    - skip_transition

# State Persist - Complete transition to final state (SCOPED)
- name: "L2 State Change: State Persist - Complete transition to final state"
  ansible.builtin.include_role:
    name: L2_state_persist
  vars:
    L2_component: "{{ L2_component_name }}"
    L2_asset_type: "{{ L2_asset_type }}"
    L2_new_state: "{{ L2_original_L2_target_state }}"
    L2_state_machine: "{{ L2_component_state_machine }}"
    L2_state_machine_config: "{{ L2_state_machine_config }}"
  when: 
    - L2_target_state is defined
    - L2_target_state != ""
    - L2_transient_state != ""
    - not L2_skip_transient_mapping
  tags:
    - state_persist
    - final_state_completion

# State Persist - Persist non-transient states directly (SCOPED)
- name: "L2 State Change: State Persist - Persist non-transient state"
  ansible.builtin.include_role:
    name: L2_state_persist
  vars:
    L2_component: "{{ L2_component_name }}"
    L2_asset_type: "{{ L2_asset_type }}"
    L2_new_state: "{{ L2_target_state }}"
    L2_state_machine: "{{ L2_component_state_machine }}"
    L2_state_machine_config: "{{ L2_state_machine_config }}"
  when: 
    - L2_target_state is defined
    - L2_target_state != ""
    - L2_transient_state == ""
    - L2_skip_transient_mapping
  tags:
    - state_persist
    - state_persistence

# POST State Guard - Final state validation after asset transition
- name: "L2 State Change: POST State Guard - Skip POST guard validation for configured asset types"
  ansible.builtin.debug:
    msg: "POST State guard validation skipped for {{ L2_component_name }} (asset_type={{ L2_asset_type }}, disable_post_state_guard=true)"
  when: 
    - L2_target_state is defined
    - L2_target_state != ""
    - L2_current_state is defined
    - L2_asset_type_info.disable_post_state_guard | default(false)
  tags:
    - post_state_guard
    - transition_validation

- name: "L2 State Change: POST State Guard - Read current state from fact file"
  ansible.builtin.include_vars:
    file: "./state/state_{{ L2_component_name }}.fact"
  register: L2_current_state_from_file
  when: 
    - L2_original_L2_target_state is defined
    - L2_original_L2_target_state != ""
    - L2_current_state is defined
    - not (L2_skip_guard | default(false))
    - not (L2_asset_type_info.disable_post_state_guard | default(false))

- name: "L2 State Change: POST State Guard - Validate final state"
  ansible.builtin.include_tasks: "{{ playbook_dir }}/roles/L2_state_guard/tasks/post_guard.yml"
  vars:
    component: "{{ L2_component_name }}"
    asset_type: "{{ L2_asset_type }}"
    current_state: "{{ L2_current_state_from_file.component_state | default(L2_current_state) }}"
    L2_target_state: "{{ L2_original_L2_target_state }}"
    component_dependencies: "{{ asset_definitions[L2_component_name].dependencies | default([]) }}"
  when: 
    - L2_original_L2_target_state is defined
    - L2_original_L2_target_state != ""
    - L2_current_state is defined
    - not (L2_skip_guard | default(false))
    - not (L2_asset_type_info.disable_post_state_guard | default(false))
  tags:
    - post_state_guard
    - transition_validation

- name: "L2 State Change: Post-Task - Display final state information"
  ansible.builtin.debug:
    msg:
      - "Component: {{ L2_component_name }}"
      - "Final State: {{ L2_current_state | default('unknown') }}"
      - "Target State: {{ L2_target_state | default('none') }}"
      - "Execution Status: {{ 'completed' if not L2_dry_run else 'dry-run' }}"

- name: "L2 State Change: Post-Task - Display state fact file location"
  ansible.builtin.debug:
    msg: "State fact file: {{ L2_state_machine_config.fact_file_path | default('/etc/ansible/facts.d/state_' + L2_component_name + '.fact') }}"
  when: not L2_dry_run

# State Change: Set component state in global map with FINAL state values
- name: "L2 State Change: Get current timestamp"
  ansible.builtin.command: date -u +"%Y-%m-%dT%H:%M:%SZ"
  register: L2_current_timestamp
  changed_when: false

- name: "L2 State Change: Store FINAL component state in global map"
  ansible.builtin.set_fact:
    L2_component_states: "{{ L2_component_states | default({}) | combine({L2_component_name: {
      'state': L2_target_state,
      'timestamp': L2_current_timestamp.stdout,
      'method': 'L2_state_change',
      'valid': true
    }}) }}"
  tags:
    - state_context
    - state_reading
    - component_states_map
    - final_state
---
# Start services for app type2 transition
# This task handles service startup logic for application type2 instances

- name: "Start Services - Check if services need to be started"
  set_fact:
    should_start_services: "{{ target_state in ['STARTING', 'RUNNING'] }}"

- name: "Start Services - Display service startup information"
  debug:
    msg:
      - "Target State: {{ target_state }}"
      - "Should Start Services: {{ should_start_services }}"
      - "Services to Start: {{ component_services | default([]) | join(', ') }}"
  when: should_start_services

- name: "Start Services - Display dependencies with pause"
  debug:
    msg:
      - "App Dependencies:"
      - "  Processing dependency: {{ item }}"
      - "  Dependency type: {{ asset_definitions[item].asset_type | default('unknown') }}"
      - "  Dependency state machine: {{ asset_definitions[item].state_machine_spec | default('unknown') }}"
  loop: "{{ component_dependencies | default([]) }}"
  when: 
    - should_start_services
    - component_dependencies | default([]) | length > 0

- name: "Start Services - Pause for each dependency"
  pause:
    seconds: 5
  loop: "{{ component_dependencies | default([]) }}"
  when: 
    - should_start_services
    - component_dependencies | default([]) | length > 0
  
#
# resource logic block | START
#
- block:
    - name: "Cleanup Resources - Wait for cleanup to complete"
      pause:
        seconds: 3

    - name: "Start Services - Wait for services to be ready"
      wait_for:
        port: "{{ item }}"
        timeout: 30
        delay: 2
      loop: "{{ component_ports | default([]) }}"
      when: component_ports | default([]) | length > 0

    - name: "Start Services - Raise exception (test)"
      fail:
        msg: "An exception was intentionally raised here as requested."
      when: request_exception | default(false) | bool == true

  when: should_start_services | default(false) | bool == true
#
# resource logic block | STOP
#

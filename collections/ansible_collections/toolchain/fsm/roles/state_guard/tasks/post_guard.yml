---
# POST State Guard - Final state validation after asset transition
# This guard validates that the transition succeeded and all dependencies are in correct state
# It ensures the final state is consistent and all dependency chains are valid

- name: "POST State Guard - Initialize post-transition validation for {{ component }}"
  set_fact:
    post_guard_transition_valid: false
    post_guard_transition_reason: ""
    post_guard_timestamp: "{{ ansible_date_time.iso8601 }}"
  tags:
    - post_state_guard
    - transition_validation

- name: "POST State Guard - Validate required variables"
  assert:
    that:
      - component is defined and component != ""
      - current_state is defined and current_state != ""
      - target_state is defined and target_state != ""
    fail_msg: "Missing required variables: component='{{ component }}', current_state='{{ current_state }}', target_state='{{ target_state }}'"
    success_msg: "All required variables are present"
  tags:
    - post_state_guard
    - transition_validation

- name: "POST State Guard - Check if component exists in state machine"
  assert:
    that:
      - component in asset_definitions
    fail_msg: "Component '{{ component }}' is not defined in state machine. Available components: {{ asset_definitions.keys() | list | join(', ') }}"
    success_msg: "Component '{{ component }}' is defined in state machine"
  tags:
    - post_state_guard
    - transition_validation

- name: "POST State Guard - Validate component reached target state"
  assert:
    that:
      - current_state == target_state
    fail_msg: "Component '{{ component }}' did not reach target state '{{ target_state }}'. Current state: '{{ current_state }}'"
    success_msg: "Component '{{ component }}' successfully reached target state '{{ target_state }}'"
  tags:
    - post_state_guard
    - transition_validation

- name: "POST State Guard - Check if component has dependencies"
  set_fact:
    post_guard_has_dependencies: "{{ component_dependencies | default([]) | length > 0 }}"
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Check if dependency validation is required"
  set_fact:
    post_guard_dependency_validation_required: "{{ post_guard_has_dependencies and target_state in ['STARTING', 'RUNNING'] }}"
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Display dependency information"
  debug:
    msg:
      - "Component: {{ component }}"
      - "Has Dependencies: {{ post_guard_has_dependencies }}"
      - "Dependencies: {{ component_dependencies | default([]) | join(', ') }}"
      - "POST Dependency Validation Required: {{ post_guard_dependency_validation_required }}"
  when: post_guard_has_dependencies
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Extract dependency states from global state map"
  set_fact:
    post_guard_dependency_states: "{{ component_dependencies | map('extract', global_component_states) | map(attribute='state') | list }}"
    post_guard_dependency_components: "{{ component_dependencies | default([]) }}"
  when: post_guard_dependency_validation_required
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Create dependency state mapping"
  set_fact:
    post_guard_dependency_state_map: "{{ dict(post_guard_dependency_components | zip(post_guard_dependency_states)) }}"
  when: post_guard_dependency_validation_required
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Display dependency states"
  debug:
    msg:
      - "Dependency States: {{ post_guard_dependency_state_map | default({}) }}"
      - "Target State: {{ target_state }}"
  when: post_guard_dependency_validation_required
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Validate dependency states for STARTING transition"
  assert:
    that:
      - item.value in ['RUNNING']
    fail_msg: "Dependency '{{ item.key }}' must be in RUNNING state for {{ component }} to be in {{ target_state }}. Current state: {{ item.value }}"
    success_msg: "Dependency '{{ item.key }}' is in correct state: {{ item.value }}"
  loop: "{{ post_guard_dependency_state_map | dict2items }}"
  when: 
    - post_guard_dependency_validation_required
    - target_state in ['STARTING']
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Validate dependency states for RUNNING transition"
  assert:
    that:
      - item.value in ['RUNNING']
    fail_msg: "Dependency '{{ item.key }}' must be in RUNNING state for {{ component }} to be in {{ target_state }}. Current state: {{ item.value }}"
    success_msg: "Dependency '{{ item.key }}' is in correct state: {{ item.value }}"
  loop: "{{ post_guard_dependency_state_map | dict2items }}"
  when: 
    - post_guard_dependency_validation_required
    - target_state in ['RUNNING']
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Record successful dependency validation"
  set_fact:
    post_guard_dependency_validation_success: true
    post_guard_dependency_validation_message: "All dependencies validated successfully"
  when: post_guard_dependency_validation_required
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Set dependency validation as not required"
  set_fact:
    post_guard_dependency_validation_success: true
    post_guard_dependency_validation_message: "No dependency validation required"
  when: not post_guard_dependency_validation_required
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Display dependency validation result"
  debug:
    msg:
      - "Component: {{ component }}"
      - "POST Dependency Validation Success: {{ post_guard_dependency_validation_success | default(false) }}"
      - "POST Dependency Validation Message: {{ post_guard_dependency_validation_message | default('Not performed') }}"
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Fail if dependency validation failed"
  fail:
    msg: "POST dependency validation failed: {{ post_guard_dependency_validation_message | default('Unknown error') }}"
  when: 
    - post_guard_dependency_validation_required
    - not (post_guard_dependency_validation_success | default(false))
  tags:
    - post_state_guard
    - dependency_validation

- name: "POST State Guard - Set transition as valid"
  set_fact:
    post_guard_transition_valid: true
    post_guard_transition_reason: "All POST guard conditions passed"
  tags:
    - post_state_guard
    - transition_validation

- name: "POST State Guard - Display final validation result"
  debug:
    msg:
      - "Component: {{ component }}"
      - "Current State: {{ current_state }}"
      - "Target State: {{ target_state }}"
      - "POST Guard Valid: {{ post_guard_transition_valid }}"
      - "POST Guard Reason: {{ post_guard_transition_reason }}"
      - "POST Guard Timestamp: {{ post_guard_timestamp }}"
  tags:
    - post_state_guard
    - transition_info

- name: "POST State Guard - Fail if transition is not valid"
  fail:
    msg: "POST State transition validation failed: {{ post_guard_transition_reason }}"
  when: not post_guard_transition_valid
  tags:
    - post_state_guard
    - transition_validation

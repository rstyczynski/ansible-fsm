---
# Component dependency validation for state_guard role
# This file handles validation of component dependencies before state transitions

- name: "State Guard - Check if component has dependencies"
  set_fact:
    has_component_dependencies: "{{ component_dependencies | default([]) | length > 0 }}"
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Check if dependency validation is required"
  set_fact:
    dependency_validation_required: "{{ has_component_dependencies and target_state in ['STARTING', 'RUNNING'] }}"
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Display dependency information"
  debug:
    msg:
      - "Component: {{ component }}"
      - "Has Dependencies: {{ has_component_dependencies }}"
      - "Dependencies: {{ component_dependencies | default([]) | join(', ') }}"
      - "Dependency Validation Required: {{ dependency_validation_required }}"
  when: has_component_dependencies
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Read dependency component states"
  include_role:
    name: state_context
  vars:
    component_name: "{{ item }}"
    asset_type: "{{ asset_definitions[item].asset_type | default('app') }}"
  loop: "{{ component_dependencies | default([]) }}"
  when: dependency_validation_required
  register: dependency_state_results
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Extract dependency states from global state map"
  set_fact:
    dependency_states: "{{ component_dependencies | map('extract', global_component_states) | map(attribute='state') | list }}"
    dependency_components: "{{ component_dependencies | default([]) }}"
  when: dependency_validation_required
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Create dependency state mapping"
  set_fact:
    dependency_state_map: "{{ dict(dependency_components | zip(dependency_states)) }}"
  when: dependency_validation_required
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Display dependency states"
  debug:
    msg:
      - "Dependency States: {{ dependency_state_map | default({}) }}"
      - "Target State: {{ target_state }}"
  when: dependency_validation_required
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Validate dependency states for STARTING transition"
  assert:
    that:
      - item.value in ['RUNNING']
    fail_msg: "Dependency '{{ item.key }}' must be in RUNNING state for {{ component }} to transition to {{ target_state }}. Current state: {{ item.value }}"
    success_msg: "Dependency '{{ item.key }}' is in correct state: {{ item.value }}"
  loop: "{{ dependency_state_map | dict2items }}"
  when: 
    - dependency_validation_required
    - target_state in ['STARTING']
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Validate dependency states for RUNNING transition"
  assert:
    that:
      - item.value in ['RUNNING']
    fail_msg: "Dependency '{{ item.key }}' must be in RUNNING state for {{ component }} to transition to {{ target_state }}. Current state: {{ item.value }}"
    success_msg: "Dependency '{{ item.key }}' is in correct state: {{ item.value }}"
  loop: "{{ dependency_state_map | dict2items }}"
  when: 
    - dependency_validation_required
    - target_state in ['RUNNING']
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Record successful dependency validation"
  set_fact:
    dependency_validation_success: true
    dependency_validation_message: "All dependencies validated successfully"
  when: dependency_validation_required
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Set dependency validation as not required"
  set_fact:
    dependency_validation_success: true
    dependency_validation_message: "No dependency validation required"
  when: not dependency_validation_required
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Display dependency validation result"
  debug:
    msg:
      - "Component: {{ component }}"
      - "Dependency Validation Success: {{ dependency_validation_success | default(false) }}"
      - "Dependency Validation Message: {{ dependency_validation_message | default('Not performed') }}"
  tags:
    - state_guard
    - dependency_validation

- name: "State Guard - Fail if dependency validation failed"
  fail:
    msg: "Dependency validation failed: {{ dependency_validation_message | default('Unknown error') }}"
  when: 
    - dependency_validation_required
    - not (dependency_validation_success | default(false))
  tags:
    - state_guard
    - dependency_validation

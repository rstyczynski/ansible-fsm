---
# PRE State Guard - Basic transition validation before asset transition
# This guard validates basic transition rules without checking transitive dependencies
# It allows dependency start logic to run without interference

- name: "PRE State Guard - Initialize transition validation for {{ component }}"
  set_fact:
    pre_guard_transition_valid: false
    pre_guard_transition_reason: ""
    pre_guard_timestamp: "{{ ansible_date_time.iso8601 }}"
    guard_validation:
      strict_mode: true
      allow_self_transitions: false
      require_explicit_transition: true
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Validate required variables"
  assert:
    that:
      - component is defined and component != ""
      - current_state is defined and current_state != ""
      - target_state is defined and target_state != ""
    fail_msg: "Missing required variables: component='{{ component }}', current_state='{{ current_state }}', target_state='{{ target_state }}'"
    success_msg: "All required variables are present"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Check if component exists in state machine"
  assert:
    that:
      - component in asset_definitions
    fail_msg: "Component '{{ component }}' is not defined in state machine. Available components: {{ asset_definitions.keys() | list | join(', ') }}"
    success_msg: "Component '{{ component }}' is defined in state machine"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Check if current state is valid"
  assert:
    that:
      - current_state in component_state_machine.states
    fail_msg: "Current state '{{ current_state }}' is not valid for component '{{ component }}'. Valid states: {{ component_state_machine.states | join(', ') }}"
    success_msg: "Current state '{{ current_state }}' is valid for component '{{ component }}'"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Check if target transition is valid"
  assert:
    that:
      - target_state in component_state_machine.states
    fail_msg: "Target transition '{{ target_state }}' is not valid for component '{{ component }}'. Valid states: {{ component_state_machine.states | join(', ') }}"
    success_msg: "Target transition '{{ target_state }}' is valid for component '{{ component }}'"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Check for self-transition"
  set_fact:
    pre_guard_is_self_transition: "{{ current_state == target_state }}"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Check if already in target state"
  set_fact:
    pre_guard_already_in_target_state: "{{ current_state == target_state }}"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Validate self-transition"
  assert:
    that:
      - not (pre_guard_is_self_transition and not guard_validation.allow_self_transitions and not pre_guard_already_in_target_state)
    fail_msg: "Self-transition from '{{ current_state }}' to '{{ target_state }}' is not allowed"
    success_msg: "Self-transition validation passed"
  when: pre_guard_is_self_transition
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Get allowed transitions from current state"
  set_fact:
    pre_guard_allowed_transitions: "{{ component_state_machine.transitions[current_state].to | default([]) }}"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Check if current state is transient"
  set_fact:
    pre_guard_current_is_transient: "{{ current_state in ['STARTING', 'STOPPING', 'TERMINATING'] }}"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Check if target is a transient state"
  set_fact:
    pre_guard_target_is_transient: "{{ target_state in ['STARTING', 'STOPPING', 'TERMINATING'] }}"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Get final state for transient target"
  set_fact:
    pre_guard_final_state_for_transient: "{{ component_state_machine.transient_mappings | dict2items | selectattr('value.transient_state', 'equalto', target_state) | map(attribute='value.success_state') | first | default(target_state) }}"
  when: pre_guard_target_is_transient
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Set default final state for non-transient target"
  set_fact:
    pre_guard_final_state_for_transient: "{{ target_state }}"
  when: not pre_guard_target_is_transient
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Check if transition is allowed or from transient state or already in target or to transient state"
  set_fact:
    pre_guard_transition_allowed: "{{ target_state in pre_guard_allowed_transitions or (pre_guard_current_is_transient and target_state in ['RUNNING', 'STOPPED', 'TERMINATED', 'FAILED']) or pre_guard_already_in_target_state or (pre_guard_target_is_transient and pre_guard_final_state_for_transient in pre_guard_allowed_transitions) }}"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Validate transition is allowed"
  assert:
    that:
      - pre_guard_transition_allowed
    fail_msg: "Transition from '{{ current_state }}' to '{{ target_state }}' is not allowed. Allowed transitions from '{{ current_state }}': {{ pre_guard_allowed_transitions | join(', ') }}"
    success_msg: "Transition from '{{ current_state }}' to '{{ target_state }}' is allowed"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Check if component has direct dependencies"
  set_fact:
    pre_guard_has_direct_dependencies: "{{ component_dependencies | default([]) | length > 0 }}"
  tags:
    - pre_state_guard
    - dependency_validation

- name: "PRE State Guard - Display dependency information"
  debug:
    msg:
      - "Component: {{ component }}"
      - "Has Direct Dependencies: {{ pre_guard_has_direct_dependencies }}"
      - "Direct Dependencies: {{ component_dependencies | default([]) | join(', ') }}"
      - "Target State: {{ target_state }}"
  when: pre_guard_has_direct_dependencies
  tags:
    - pre_state_guard
    - dependency_validation

- name: "PRE State Guard - Set transition as valid"
  set_fact:
    pre_guard_transition_valid: true
    pre_guard_transition_reason: "All PRE guard conditions passed"
  tags:
    - pre_state_guard
    - transition_validation

- name: "PRE State Guard - Display transition validation result"
  debug:
    msg:
      - "Component: {{ component }}"
      - "Current State: {{ current_state }}"
      - "Target Transition: {{ target_state }}"
      - "PRE Guard Valid: {{ pre_guard_transition_valid }}"
      - "PRE Guard Reason: {{ pre_guard_transition_reason }}"
      - "PRE Guard Timestamp: {{ pre_guard_timestamp }}"
  tags:
    - pre_state_guard
    - transition_info

- name: "PRE State Guard - Fail if transition is not valid"
  fail:
    msg: "PRE State transition validation failed: {{ pre_guard_transition_reason }}"
  when: not pre_guard_transition_valid
  tags:
    - pre_state_guard
    - transition_validation

---
# Load a single state file and add it to the component states map
# This task is called in a loop for each state file

- name: "State Map - Read state file content"
  slurp:
    src: "{{ item.path }}"
  register: state_file_content
  tags:
    - state_map
    - state_loading

- name: "State Map - Parse state file content"
  set_fact:
    current_state_data: "{{ state_file_content.content | b64decode | from_yaml }}"
  tags:
    - state_map
    - state_loading

- name: "State Map - Extract component name from file path"
  set_fact:
    current_component_name: "{{ item.path | basename | regex_replace('^state_(.+)\\.fact$', '\\1') }}"
  tags:
    - state_map
    - state_loading

- name: "State Map - Store component state data immediately"
  set_fact:
    component_states_map: "{{ component_states_map | combine({current_component_name: component_state_data}) }}"
  vars:
    component_state_data:
      state: "{{ current_state_data.component_state | default('UNKNOWN') }}"
      timestamp: "{{ current_state_data.component_state_timestamp | default('') }}"
      method: "{{ current_state_data.component_state_method | default('unknown') }}"
      previous_state: "{{ current_state_data.component_state_previous | default('') }}"
      transition: "{{ current_state_data.component_state_transition | default('') }}"
      valid: "{{ current_state_data.component_state_valid | default(false) }}"
      metadata:
        hostname: "{{ current_state_data.hostname | default('') }}"
        user_id: "{{ current_state_data.user_id | default('') }}"
        playbook_name: "{{ current_state_data.playbook_name | default('') }}"
        ansible_version: "{{ current_state_data.ansible_version | default({}) }}"
      file_path: "{{ item.path }}"
      file_exists: true
  when: current_state_data is defined and current_state_data.component_state is defined
  tags:
    - state_map
    - state_loading
